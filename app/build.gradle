apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion targetSdk.toInteger()
    buildToolsVersion buildToolsVer
    defaultConfig {
        applicationId "hr.fer.edugame"
        minSdkVersion minSdk.toInteger()
        targetSdkVersion targetSdk.toInteger()
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    
    applicationVariants.all { variant -> forceDependencyVersions(variant) }
    testVariants.all { variant -> forceDependencyVersions(variant) }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'

    // support lib
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"

    // network
    implementation 'com.squareup.okhttp3:okhttp:3.5.0'
    implementation 'com.android.volley:volley:1.1.0'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // di
    implementation "javax.annotation:javax.annotation-api:$javaAnnotationVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // rx
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"

    // rx binding
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxBindingVersion"

    // rx relay
    implementation "com.jakewharton.rxrelay2:rxrelay:$rxRelayVersion"

    // logging
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.readystatesoftware.chuck:library:$chuckVersion"

    // firebase
    implementation "com.google.firebase:firebase-core:$firebase"
    implementation "com.google.firebase:firebase-auth:$firebase"
    implementation "com.google.firebase:firebase-database:$firebase"

    // other
    implementation "com.jakewharton.threetenabp:threetenabp:$threeTenAndroidVersion"
    testImplementation "org.threeten:threetenbp:$threeTenVersion"
}

def forceDependencyVersions(variant) {
    variant.getCompileConfiguration().resolutionStrategy {
        force "com.android.support:support-v13:$supportLibVersion"
        force "com.android.support:support-v7:$supportLibVersion"
        force "com.android.support:support-v4:$supportLibVersion"
        force "com.android.support:design:$supportLibVersion"
    }
    variant.getRuntimeConfiguration().resolutionStrategy {
        force "com.android.support:support-v13:$supportLibVersion"
        force "com.android.support:support-v7:$supportLibVersion"
        force "com.android.support:support-v4:$supportLibVersion"
        force "com.android.support:design:$supportLibVersion"
    }
}

apply plugin: 'com.google.gms.google-services'